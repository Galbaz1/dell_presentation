/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./node_modules/gsap/dist/MotionPathPlugin.js":
/*!****************************************************!*\
  !*** ./node_modules/gsap/dist/MotionPathPlugin.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("(function (global, factory) {\n\t true ? factory(exports) :\n\t0;\n}(this, (function (exports) { 'use strict';\n\n\tvar _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t    _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t    _scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n\t    _selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t    _DEG2RAD = Math.PI / 180,\n\t    _RAD2DEG = 180 / Math.PI,\n\t    _sin = Math.sin,\n\t    _cos = Math.cos,\n\t    _abs = Math.abs,\n\t    _sqrt = Math.sqrt,\n\t    _atan2 = Math.atan2,\n\t    _largeNum = 1e8,\n\t    _isString = function _isString(value) {\n\t  return typeof value === \"string\";\n\t},\n\t    _isNumber = function _isNumber(value) {\n\t  return typeof value === \"number\";\n\t},\n\t    _isUndefined = function _isUndefined(value) {\n\t  return typeof value === \"undefined\";\n\t},\n\t    _temp = {},\n\t    _temp2 = {},\n\t    _roundingNum = 1e5,\n\t    _wrapProgress = function _wrapProgress(progress) {\n\t  return Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum || (progress < 0 ? 0 : 1);\n\t},\n\t    _round = function _round(value) {\n\t  return Math.round(value * _roundingNum) / _roundingNum || 0;\n\t},\n\t    _roundPrecise = function _roundPrecise(value) {\n\t  return Math.round(value * 1e10) / 1e10 || 0;\n\t},\n\t    _splitSegment = function _splitSegment(rawPath, segIndex, i, t) {\n\t  var segment = rawPath[segIndex],\n\t      shift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n\n\t  if ((shift || !t) && shift + i + 2 < segment.length) {\n\t    rawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n\t    segment.splice(0, i + shift);\n\t    return 1;\n\t  }\n\t},\n\t    _getSampleIndex = function _getSampleIndex(samples, length, progress) {\n\t  var l = samples.length,\n\t      i = ~~(progress * l);\n\n\t  if (samples[i] > length) {\n\t    while (--i && samples[i] > length) {}\n\n\t    i < 0 && (i = 0);\n\t  } else {\n\t    while (samples[++i] < length && i < l) {}\n\t  }\n\n\t  return i < l ? i : l - 1;\n\t},\n\t    _reverseRawPath = function _reverseRawPath(rawPath, skipOuter) {\n\t  var i = rawPath.length;\n\t  skipOuter || rawPath.reverse();\n\n\t  while (i--) {\n\t    rawPath[i].reversed || reverseSegment(rawPath[i]);\n\t  }\n\t},\n\t    _copyMetaData = function _copyMetaData(source, copy) {\n\t  copy.totalLength = source.totalLength;\n\n\t  if (source.samples) {\n\t    copy.samples = source.samples.slice(0);\n\t    copy.lookup = source.lookup.slice(0);\n\t    copy.minLength = source.minLength;\n\t    copy.resolution = source.resolution;\n\t  } else if (source.totalPoints) {\n\t    copy.totalPoints = source.totalPoints;\n\t  }\n\n\t  return copy;\n\t},\n\t    _appendOrMerge = function _appendOrMerge(rawPath, segment) {\n\t  var index = rawPath.length,\n\t      prevSeg = rawPath[index - 1] || [],\n\t      l = prevSeg.length;\n\n\t  if (index && segment[0] === prevSeg[l - 2] && segment[1] === prevSeg[l - 1]) {\n\t    segment = prevSeg.concat(segment.slice(2));\n\t    index--;\n\t  }\n\n\t  rawPath[index] = segment;\n\t};\n\n\tfunction getRawPath(value) {\n\t  value = _isString(value) && _selectorExp.test(value) ? document.querySelector(value) || value : value;\n\t  var e = value.getAttribute ? value : 0,\n\t      rawPath;\n\n\t  if (e && (value = value.getAttribute(\"d\"))) {\n\t    if (!e._gsPath) {\n\t      e._gsPath = {};\n\t    }\n\n\t    rawPath = e._gsPath[value];\n\t    return rawPath && !rawPath._dirty ? rawPath : e._gsPath[value] = stringToRawPath(value);\n\t  }\n\n\t  return !value ? console.warn(\"Expecting a <path> element or an SVG path data string\") : _isString(value) ? stringToRawPath(value) : _isNumber(value[0]) ? [value] : value;\n\t}\n\tfunction copyRawPath(rawPath) {\n\t  var a = [],\n\t      i = 0;\n\n\t  for (; i < rawPath.length; i++) {\n\t    a[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n\t  }\n\n\t  return _copyMetaData(rawPath, a);\n\t}\n\tfunction reverseSegment(segment) {\n\t  var i = 0,\n\t      y;\n\t  segment.reverse();\n\n\t  for (; i < segment.length; i += 2) {\n\t    y = segment[i];\n\t    segment[i] = segment[i + 1];\n\t    segment[i + 1] = y;\n\t  }\n\n\t  segment.reversed = !segment.reversed;\n\t}\n\n\tvar _createPath = function _createPath(e, ignore) {\n\t  var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"),\n\t      attr = [].slice.call(e.attributes),\n\t      i = attr.length,\n\t      name;\n\t  ignore = \",\" + ignore + \",\";\n\n\t  while (--i > -1) {\n\t    name = attr[i].nodeName.toLowerCase();\n\n\t    if (ignore.indexOf(\",\" + name + \",\") < 0) {\n\t      path.setAttributeNS(null, name, attr[i].nodeValue);\n\t    }\n\t  }\n\n\t  return path;\n\t},\n\t    _typeAttrs = {\n\t  rect: \"rx,ry,x,y,width,height\",\n\t  circle: \"r,cx,cy\",\n\t  ellipse: \"rx,ry,cx,cy\",\n\t  line: \"x1,x2,y1,y2\"\n\t},\n\t    _attrToObj = function _attrToObj(e, attrs) {\n\t  var props = attrs ? attrs.split(\",\") : [],\n\t      obj = {},\n\t      i = props.length;\n\n\t  while (--i > -1) {\n\t    obj[props[i]] = +e.getAttribute(props[i]) || 0;\n\t  }\n\n\t  return obj;\n\t};\n\n\tfunction convertToPath(element, swap) {\n\t  var type = element.tagName.toLowerCase(),\n\t      circ = 0.552284749831,\n\t      data,\n\t      x,\n\t      y,\n\t      r,\n\t      ry,\n\t      path,\n\t      rcirc,\n\t      rycirc,\n\t      points,\n\t      w,\n\t      h,\n\t      x2,\n\t      x3,\n\t      x4,\n\t      x5,\n\t      x6,\n\t      y2,\n\t      y3,\n\t      y4,\n\t      y5,\n\t      y6,\n\t      attr;\n\n\t  if (type === \"path\" || !element.getBBox) {\n\t    return element;\n\t  }\n\n\t  path = _createPath(element, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n\t  attr = _attrToObj(element, _typeAttrs[type]);\n\n\t  if (type === \"rect\") {\n\t    r = attr.rx;\n\t    ry = attr.ry || r;\n\t    x = attr.x;\n\t    y = attr.y;\n\t    w = attr.width - r * 2;\n\t    h = attr.height - ry * 2;\n\n\t    if (r || ry) {\n\t      x2 = x + r * (1 - circ);\n\t      x3 = x + r;\n\t      x4 = x3 + w;\n\t      x5 = x4 + r * circ;\n\t      x6 = x4 + r;\n\t      y2 = y + ry * (1 - circ);\n\t      y3 = y + ry;\n\t      y4 = y3 + h;\n\t      y5 = y4 + ry * circ;\n\t      y6 = y4 + ry;\n\t      data = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(\",\") + \"z\";\n\t    } else {\n\t      data = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + -w + \" v\" + -h + \" h\" + w + \"z\";\n\t    }\n\t  } else if (type === \"circle\" || type === \"ellipse\") {\n\t    if (type === \"circle\") {\n\t      r = ry = attr.r;\n\t      rycirc = r * circ;\n\t    } else {\n\t      r = attr.rx;\n\t      ry = attr.ry;\n\t      rycirc = ry * circ;\n\t    }\n\n\t    x = attr.cx;\n\t    y = attr.cy;\n\t    rcirc = r * circ;\n\t    data = \"M\" + (x + r) + \",\" + y + \" C\" + [x + r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(\",\") + \"z\";\n\t  } else if (type === \"line\") {\n\t    data = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2;\n\t  } else if (type === \"polyline\" || type === \"polygon\") {\n\t    points = (element.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n\t    x = points.shift();\n\t    y = points.shift();\n\t    data = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n\n\t    if (type === \"polygon\") {\n\t      data += \",\" + x + \",\" + y + \"z\";\n\t    }\n\t  }\n\n\t  path.setAttribute(\"d\", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n\n\t  if (swap && element.parentNode) {\n\t    element.parentNode.insertBefore(path, element);\n\t    element.parentNode.removeChild(element);\n\t  }\n\n\t  return path;\n\t}\n\n\tfunction getRotationAtBezierT(segment, i, t) {\n\t  var a = segment[i],\n\t      b = segment[i + 2],\n\t      c = segment[i + 4],\n\t      x;\n\t  a += (b - a) * t;\n\t  b += (c - b) * t;\n\t  a += (b - a) * t;\n\t  x = b + (c + (segment[i + 6] - c) * t - b) * t - a;\n\t  a = segment[i + 1];\n\t  b = segment[i + 3];\n\t  c = segment[i + 5];\n\t  a += (b - a) * t;\n\t  b += (c - b) * t;\n\t  a += (b - a) * t;\n\t  return _round(_atan2(b + (c + (segment[i + 7] - c) * t - b) * t - a, x) * _RAD2DEG);\n\t}\n\n\tfunction sliceRawPath(rawPath, start, end) {\n\t  end = _isUndefined(end) ? 1 : _roundPrecise(end) || 0;\n\t  start = _roundPrecise(start) || 0;\n\t  var loops = Math.max(0, ~~(_abs(end - start) - 1e-8)),\n\t      path = copyRawPath(rawPath);\n\n\t  if (start > end) {\n\t    start = 1 - start;\n\t    end = 1 - end;\n\n\t    _reverseRawPath(path);\n\n\t    path.totalLength = 0;\n\t  }\n\n\t  if (start < 0 || end < 0) {\n\t    var offset = Math.abs(~~Math.min(start, end)) + 1;\n\t    start += offset;\n\t    end += offset;\n\t  }\n\n\t  path.totalLength || cacheRawPathMeasurements(path);\n\t  var wrap = end > 1,\n\t      s = getProgressData(path, start, _temp, true),\n\t      e = getProgressData(path, end, _temp2),\n\t      eSeg = e.segment,\n\t      sSeg = s.segment,\n\t      eSegIndex = e.segIndex,\n\t      sSegIndex = s.segIndex,\n\t      ei = e.i,\n\t      si = s.i,\n\t      sameSegment = sSegIndex === eSegIndex,\n\t      sameBezier = ei === si && sameSegment,\n\t      wrapsBehind,\n\t      sShift,\n\t      eShift,\n\t      i,\n\t      copy,\n\t      totalSegments,\n\t      l,\n\t      j;\n\n\t  if (wrap || loops) {\n\t    wrapsBehind = eSegIndex < sSegIndex || sameSegment && ei < si || sameBezier && e.t < s.t;\n\n\t    if (_splitSegment(path, sSegIndex, si, s.t)) {\n\t      sSegIndex++;\n\n\t      if (!wrapsBehind) {\n\t        eSegIndex++;\n\n\t        if (sameBezier) {\n\t          e.t = (e.t - s.t) / (1 - s.t);\n\t          ei = 0;\n\t        } else if (sameSegment) {\n\t          ei -= si;\n\t        }\n\t      }\n\t    }\n\n\t    if (Math.abs(1 - (end - start)) < 1e-5) {\n\t      eSegIndex = sSegIndex - 1;\n\t    } else if (!e.t && eSegIndex) {\n\t      eSegIndex--;\n\t    } else if (_splitSegment(path, eSegIndex, ei, e.t) && wrapsBehind) {\n\t      sSegIndex++;\n\t    }\n\n\t    if (s.t === 1) {\n\t      sSegIndex = (sSegIndex + 1) % path.length;\n\t    }\n\n\t    copy = [];\n\t    totalSegments = path.length;\n\t    l = 1 + totalSegments * loops;\n\t    j = sSegIndex;\n\t    l += (totalSegments - sSegIndex + eSegIndex) % totalSegments;\n\n\t    for (i = 0; i < l; i++) {\n\t      _appendOrMerge(copy, path[j++ % totalSegments]);\n\t    }\n\n\t    path = copy;\n\t  } else {\n\t    eShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n\n\t    if (start !== end) {\n\t      sShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n\t      sameSegment && (eShift += sShift);\n\t      eSeg.splice(ei + eShift + 2);\n\t      (sShift || si) && sSeg.splice(0, si + sShift);\n\t      i = path.length;\n\n\t      while (i--) {\n\t        (i < sSegIndex || i > eSegIndex) && path.splice(i, 1);\n\t      }\n\t    } else {\n\t      eSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0);\n\t      ei += eShift;\n\t      s = eSeg[ei];\n\t      e = eSeg[ei + 1];\n\t      eSeg.length = eSeg.totalLength = 0;\n\t      eSeg.totalPoints = path.totalPoints = 8;\n\t      eSeg.push(s, e, s, e, s, e, s, e);\n\t    }\n\t  }\n\n\t  path.totalLength = 0;\n\t  return path;\n\t}\n\n\tfunction measureSegment(segment, startIndex, bezierQty) {\n\t  startIndex = startIndex || 0;\n\n\t  if (!segment.samples) {\n\t    segment.samples = [];\n\t    segment.lookup = [];\n\t  }\n\n\t  var resolution = ~~segment.resolution || 12,\n\t      inc = 1 / resolution,\n\t      endIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length,\n\t      x1 = segment[startIndex],\n\t      y1 = segment[startIndex + 1],\n\t      samplesIndex = startIndex ? startIndex / 6 * resolution : 0,\n\t      samples = segment.samples,\n\t      lookup = segment.lookup,\n\t      min = (startIndex ? segment.minLength : _largeNum) || _largeNum,\n\t      prevLength = samples[samplesIndex + bezierQty * resolution - 1],\n\t      length = startIndex ? samples[samplesIndex - 1] : 0,\n\t      i,\n\t      j,\n\t      x4,\n\t      x3,\n\t      x2,\n\t      xd,\n\t      xd1,\n\t      y4,\n\t      y3,\n\t      y2,\n\t      yd,\n\t      yd1,\n\t      inv,\n\t      t,\n\t      lengthIndex,\n\t      l,\n\t      segLength;\n\t  samples.length = lookup.length = 0;\n\n\t  for (j = startIndex + 2; j < endIndex; j += 6) {\n\t    x4 = segment[j + 4] - x1;\n\t    x3 = segment[j + 2] - x1;\n\t    x2 = segment[j] - x1;\n\t    y4 = segment[j + 5] - y1;\n\t    y3 = segment[j + 3] - y1;\n\t    y2 = segment[j + 1] - y1;\n\t    xd = xd1 = yd = yd1 = 0;\n\n\t    if (_abs(x4) < .01 && _abs(y4) < .01 && _abs(x2) + _abs(y2) < .01) {\n\t      if (segment.length > 8) {\n\t        segment.splice(j, 6);\n\t        j -= 6;\n\t        endIndex -= 6;\n\t      }\n\t    } else {\n\t      for (i = 1; i <= resolution; i++) {\n\t        t = inc * i;\n\t        inv = 1 - t;\n\t        xd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n\t        yd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n\t        l = _sqrt(yd * yd + xd * xd);\n\n\t        if (l < min) {\n\t          min = l;\n\t        }\n\n\t        length += l;\n\t        samples[samplesIndex++] = length;\n\t      }\n\t    }\n\n\t    x1 += x4;\n\t    y1 += y4;\n\t  }\n\n\t  if (prevLength) {\n\t    prevLength -= length;\n\n\t    for (; samplesIndex < samples.length; samplesIndex++) {\n\t      samples[samplesIndex] += prevLength;\n\t    }\n\t  }\n\n\t  if (samples.length && min) {\n\t    segment.totalLength = segLength = samples[samples.length - 1] || 0;\n\t    segment.minLength = min;\n\n\t    if (segLength / min < 9999) {\n\t      l = lengthIndex = 0;\n\n\t      for (i = 0; i < segLength; i += min) {\n\t        lookup[l++] = samples[lengthIndex] < i ? ++lengthIndex : lengthIndex;\n\t      }\n\t    }\n\t  } else {\n\t    segment.totalLength = samples[0] = 0;\n\t  }\n\n\t  return startIndex ? length - samples[startIndex / 2 - 1] : length;\n\t}\n\n\tfunction cacheRawPathMeasurements(rawPath, resolution) {\n\t  var pathLength, points, i;\n\n\t  for (i = pathLength = points = 0; i < rawPath.length; i++) {\n\t    rawPath[i].resolution = ~~resolution || 12;\n\t    points += rawPath[i].length;\n\t    pathLength += measureSegment(rawPath[i]);\n\t  }\n\n\t  rawPath.totalPoints = points;\n\t  rawPath.totalLength = pathLength;\n\t  return rawPath;\n\t}\n\tfunction subdivideSegment(segment, i, t) {\n\t  if (t <= 0 || t >= 1) {\n\t    return 0;\n\t  }\n\n\t  var ax = segment[i],\n\t      ay = segment[i + 1],\n\t      cp1x = segment[i + 2],\n\t      cp1y = segment[i + 3],\n\t      cp2x = segment[i + 4],\n\t      cp2y = segment[i + 5],\n\t      bx = segment[i + 6],\n\t      by = segment[i + 7],\n\t      x1a = ax + (cp1x - ax) * t,\n\t      x2 = cp1x + (cp2x - cp1x) * t,\n\t      y1a = ay + (cp1y - ay) * t,\n\t      y2 = cp1y + (cp2y - cp1y) * t,\n\t      x1 = x1a + (x2 - x1a) * t,\n\t      y1 = y1a + (y2 - y1a) * t,\n\t      x2a = cp2x + (bx - cp2x) * t,\n\t      y2a = cp2y + (by - cp2y) * t;\n\t  x2 += (x2a - x2) * t;\n\t  y2 += (y2a - y2) * t;\n\t  segment.splice(i + 2, 4, _round(x1a), _round(y1a), _round(x1), _round(y1), _round(x1 + (x2 - x1) * t), _round(y1 + (y2 - y1) * t), _round(x2), _round(y2), _round(x2a), _round(y2a));\n\t  segment.samples && segment.samples.splice(i / 6 * segment.resolution | 0, 0, 0, 0, 0, 0, 0, 0);\n\t  return 6;\n\t}\n\n\tfunction getProgressData(rawPath, progress, decoratee, pushToNextIfAtEnd) {\n\t  decoratee = decoratee || {};\n\t  rawPath.totalLength || cacheRawPathMeasurements(rawPath);\n\n\t  if (progress < 0 || progress > 1) {\n\t    progress = _wrapProgress(progress);\n\t  }\n\n\t  var segIndex = 0,\n\t      segment = rawPath[0],\n\t      samples,\n\t      resolution,\n\t      length,\n\t      min,\n\t      max,\n\t      i,\n\t      t;\n\n\t  if (!progress) {\n\t    t = i = segIndex = 0;\n\t    segment = rawPath[0];\n\t  } else if (progress === 1) {\n\t    t = 1;\n\t    segIndex = rawPath.length - 1;\n\t    segment = rawPath[segIndex];\n\t    i = segment.length - 8;\n\t  } else {\n\t    if (rawPath.length > 1) {\n\t      length = rawPath.totalLength * progress;\n\t      max = i = 0;\n\n\t      while ((max += rawPath[i++].totalLength) < length) {\n\t        segIndex = i;\n\t      }\n\n\t      segment = rawPath[segIndex];\n\t      min = max - segment.totalLength;\n\t      progress = (length - min) / (max - min) || 0;\n\t    }\n\n\t    samples = segment.samples;\n\t    resolution = segment.resolution;\n\t    length = segment.totalLength * progress;\n\t    i = segment.lookup.length ? segment.lookup[~~(length / segment.minLength)] || 0 : _getSampleIndex(samples, length, progress);\n\t    min = i ? samples[i - 1] : 0;\n\t    max = samples[i];\n\n\t    if (max < length) {\n\t      min = max;\n\t      max = samples[++i];\n\t    }\n\n\t    t = 1 / resolution * ((length - min) / (max - min) + i % resolution);\n\t    i = ~~(i / resolution) * 6;\n\n\t    if (pushToNextIfAtEnd && t === 1) {\n\t      if (i + 6 < segment.length) {\n\t        i += 6;\n\t        t = 0;\n\t      } else if (segIndex + 1 < rawPath.length) {\n\t        i = t = 0;\n\t        segment = rawPath[++segIndex];\n\t      }\n\t    }\n\t  }\n\n\t  decoratee.t = t;\n\t  decoratee.i = i;\n\t  decoratee.path = rawPath;\n\t  decoratee.segment = segment;\n\t  decoratee.segIndex = segIndex;\n\t  return decoratee;\n\t}\n\n\tfunction getPositionOnPath(rawPath, progress, includeAngle, point) {\n\t  var segment = rawPath[0],\n\t      result = point || {},\n\t      samples,\n\t      resolution,\n\t      length,\n\t      min,\n\t      max,\n\t      i,\n\t      t,\n\t      a,\n\t      inv;\n\n\t  if (progress < 0 || progress > 1) {\n\t    progress = _wrapProgress(progress);\n\t  }\n\n\t  segment.lookup || cacheRawPathMeasurements(rawPath);\n\n\t  if (rawPath.length > 1) {\n\t    length = rawPath.totalLength * progress;\n\t    max = i = 0;\n\n\t    while ((max += rawPath[i++].totalLength) < length) {\n\t      segment = rawPath[i];\n\t    }\n\n\t    min = max - segment.totalLength;\n\t    progress = (length - min) / (max - min) || 0;\n\t  }\n\n\t  samples = segment.samples;\n\t  resolution = segment.resolution;\n\t  length = segment.totalLength * progress;\n\t  i = segment.lookup.length ? segment.lookup[progress < 1 ? ~~(length / segment.minLength) : segment.lookup.length - 1] || 0 : _getSampleIndex(samples, length, progress);\n\t  min = i ? samples[i - 1] : 0;\n\t  max = samples[i];\n\n\t  if (max < length) {\n\t    min = max;\n\t    max = samples[++i];\n\t  }\n\n\t  t = 1 / resolution * ((length - min) / (max - min) + i % resolution) || 0;\n\t  inv = 1 - t;\n\t  i = ~~(i / resolution) * 6;\n\t  a = segment[i];\n\t  result.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n\t  result.y = _round((t * t * (segment[i + 7] - (a = segment[i + 1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n\n\t  if (includeAngle) {\n\t    result.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n\t  }\n\n\t  return result;\n\t}\n\tfunction transformRawPath(rawPath, a, b, c, d, tx, ty) {\n\t  var j = rawPath.length,\n\t      segment,\n\t      l,\n\t      i,\n\t      x,\n\t      y;\n\n\t  while (--j > -1) {\n\t    segment = rawPath[j];\n\t    l = segment.length;\n\n\t    for (i = 0; i < l; i += 2) {\n\t      x = segment[i];\n\t      y = segment[i + 1];\n\t      segment[i] = x * a + y * c + tx;\n\t      segment[i + 1] = x * b + y * d + ty;\n\t    }\n\t  }\n\n\t  rawPath._dirty = 1;\n\t  return rawPath;\n\t}\n\n\tfunction arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n\t  if (lastX === x && lastY === y) {\n\t    return;\n\t  }\n\n\t  rx = _abs(rx);\n\t  ry = _abs(ry);\n\n\t  var angleRad = angle % 360 * _DEG2RAD,\n\t      cosAngle = _cos(angleRad),\n\t      sinAngle = _sin(angleRad),\n\t      PI = Math.PI,\n\t      TWOPI = PI * 2,\n\t      dx2 = (lastX - x) / 2,\n\t      dy2 = (lastY - y) / 2,\n\t      x1 = cosAngle * dx2 + sinAngle * dy2,\n\t      y1 = -sinAngle * dx2 + cosAngle * dy2,\n\t      x1_sq = x1 * x1,\n\t      y1_sq = y1 * y1,\n\t      radiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\n\t  if (radiiCheck > 1) {\n\t    rx = _sqrt(radiiCheck) * rx;\n\t    ry = _sqrt(radiiCheck) * ry;\n\t  }\n\n\t  var rx_sq = rx * rx,\n\t      ry_sq = ry * ry,\n\t      sq = (rx_sq * ry_sq - rx_sq * y1_sq - ry_sq * x1_sq) / (rx_sq * y1_sq + ry_sq * x1_sq);\n\n\t  if (sq < 0) {\n\t    sq = 0;\n\t  }\n\n\t  var coef = (largeArcFlag === sweepFlag ? -1 : 1) * _sqrt(sq),\n\t      cx1 = coef * (rx * y1 / ry),\n\t      cy1 = coef * -(ry * x1 / rx),\n\t      sx2 = (lastX + x) / 2,\n\t      sy2 = (lastY + y) / 2,\n\t      cx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n\t      cy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n\t      ux = (x1 - cx1) / rx,\n\t      uy = (y1 - cy1) / ry,\n\t      vx = (-x1 - cx1) / rx,\n\t      vy = (-y1 - cy1) / ry,\n\t      temp = ux * ux + uy * uy,\n\t      angleStart = (uy < 0 ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n\t      angleExtent = (ux * vy - uy * vx < 0 ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\n\t  isNaN(angleExtent) && (angleExtent = PI);\n\n\t  if (!sweepFlag && angleExtent > 0) {\n\t    angleExtent -= TWOPI;\n\t  } else if (sweepFlag && angleExtent < 0) {\n\t    angleExtent += TWOPI;\n\t  }\n\n\t  angleStart %= TWOPI;\n\t  angleExtent %= TWOPI;\n\n\t  var segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)),\n\t      rawPath = [],\n\t      angleIncrement = angleExtent / segments,\n\t      controlLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n\t      ma = cosAngle * rx,\n\t      mb = sinAngle * rx,\n\t      mc = sinAngle * -ry,\n\t      md = cosAngle * ry,\n\t      i;\n\n\t  for (i = 0; i < segments; i++) {\n\t    angle = angleStart + i * angleIncrement;\n\t    x1 = _cos(angle);\n\t    y1 = _sin(angle);\n\t    ux = _cos(angle += angleIncrement);\n\t    uy = _sin(angle);\n\t    rawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n\t  }\n\n\t  for (i = 0; i < rawPath.length; i += 2) {\n\t    x1 = rawPath[i];\n\t    y1 = rawPath[i + 1];\n\t    rawPath[i] = x1 * ma + y1 * mc + cx;\n\t    rawPath[i + 1] = x1 * mb + y1 * md + cy;\n\t  }\n\n\t  rawPath[i - 2] = x;\n\t  rawPath[i - 1] = y;\n\t  return rawPath;\n\t}\n\n\tfunction stringToRawPath(d) {\n\t  var a = (d + \"\").replace(_scientific, function (m) {\n\t    var n = +m;\n\t    return n < 0.0001 && n > -0.0001 ? 0 : n;\n\t  }).match(_svgPathExp) || [],\n\t      path = [],\n\t      relativeX = 0,\n\t      relativeY = 0,\n\t      twoThirds = 2 / 3,\n\t      elements = a.length,\n\t      points = 0,\n\t      errorMessage = \"ERROR: malformed path: \" + d,\n\t      i,\n\t      j,\n\t      x,\n\t      y,\n\t      command,\n\t      isRelative,\n\t      segment,\n\t      startX,\n\t      startY,\n\t      difX,\n\t      difY,\n\t      beziers,\n\t      prevCommand,\n\t      flag1,\n\t      flag2,\n\t      line = function line(sx, sy, ex, ey) {\n\t    difX = (ex - sx) / 3;\n\t    difY = (ey - sy) / 3;\n\t    segment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n\t  };\n\n\t  if (!d || !isNaN(a[0]) || isNaN(a[1])) {\n\t    console.log(errorMessage);\n\t    return path;\n\t  }\n\n\t  for (i = 0; i < elements; i++) {\n\t    prevCommand = command;\n\n\t    if (isNaN(a[i])) {\n\t      command = a[i].toUpperCase();\n\t      isRelative = command !== a[i];\n\t    } else {\n\t      i--;\n\t    }\n\n\t    x = +a[i + 1];\n\t    y = +a[i + 2];\n\n\t    if (isRelative) {\n\t      x += relativeX;\n\t      y += relativeY;\n\t    }\n\n\t    if (!i) {\n\t      startX = x;\n\t      startY = y;\n\t    }\n\n\t    if (command === \"M\") {\n\t      if (segment) {\n\t        if (segment.length < 8) {\n\t          path.length -= 1;\n\t        } else {\n\t          points += segment.length;\n\t        }\n\t      }\n\n\t      relativeX = startX = x;\n\t      relativeY = startY = y;\n\t      segment = [x, y];\n\t      path.push(segment);\n\t      i += 2;\n\t      command = \"L\";\n\t    } else if (command === \"C\") {\n\t      if (!segment) {\n\t        segment = [0, 0];\n\t      }\n\n\t      if (!isRelative) {\n\t        relativeX = relativeY = 0;\n\t      }\n\n\t      segment.push(x, y, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, relativeX += a[i + 5] * 1, relativeY += a[i + 6] * 1);\n\t      i += 6;\n\t    } else if (command === \"S\") {\n\t      difX = relativeX;\n\t      difY = relativeY;\n\n\t      if (prevCommand === \"C\" || prevCommand === \"S\") {\n\t        difX += relativeX - segment[segment.length - 4];\n\t        difY += relativeY - segment[segment.length - 3];\n\t      }\n\n\t      if (!isRelative) {\n\t        relativeX = relativeY = 0;\n\t      }\n\n\t      segment.push(difX, difY, x, y, relativeX += a[i + 3] * 1, relativeY += a[i + 4] * 1);\n\t      i += 4;\n\t    } else if (command === \"Q\") {\n\t      difX = relativeX + (x - relativeX) * twoThirds;\n\t      difY = relativeY + (y - relativeY) * twoThirds;\n\n\t      if (!isRelative) {\n\t        relativeX = relativeY = 0;\n\t      }\n\n\t      relativeX += a[i + 3] * 1;\n\t      relativeY += a[i + 4] * 1;\n\t      segment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n\t      i += 4;\n\t    } else if (command === \"T\") {\n\t      difX = relativeX - segment[segment.length - 4];\n\t      difY = relativeY - segment[segment.length - 3];\n\t      segment.push(relativeX + difX, relativeY + difY, x + (relativeX + difX * 1.5 - x) * twoThirds, y + (relativeY + difY * 1.5 - y) * twoThirds, relativeX = x, relativeY = y);\n\t      i += 2;\n\t    } else if (command === \"H\") {\n\t      line(relativeX, relativeY, relativeX = x, relativeY);\n\t      i += 1;\n\t    } else if (command === \"V\") {\n\t      line(relativeX, relativeY, relativeX, relativeY = x + (isRelative ? relativeY - relativeX : 0));\n\t      i += 1;\n\t    } else if (command === \"L\" || command === \"Z\") {\n\t      if (command === \"Z\") {\n\t        x = startX;\n\t        y = startY;\n\t        segment.closed = true;\n\t      }\n\n\t      if (command === \"L\" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n\t        line(relativeX, relativeY, x, y);\n\n\t        if (command === \"L\") {\n\t          i += 2;\n\t        }\n\t      }\n\n\t      relativeX = x;\n\t      relativeY = y;\n\t    } else if (command === \"A\") {\n\t      flag1 = a[i + 4];\n\t      flag2 = a[i + 5];\n\t      difX = a[i + 6];\n\t      difY = a[i + 7];\n\t      j = 7;\n\n\t      if (flag1.length > 1) {\n\t        if (flag1.length < 3) {\n\t          difY = difX;\n\t          difX = flag2;\n\t          j--;\n\t        } else {\n\t          difY = flag2;\n\t          difX = flag1.substr(2);\n\t          j -= 2;\n\t        }\n\n\t        flag2 = flag1.charAt(1);\n\t        flag1 = flag1.charAt(0);\n\t      }\n\n\t      beziers = arcToSegment(relativeX, relativeY, +a[i + 1], +a[i + 2], +a[i + 3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX * 1, (isRelative ? relativeY : 0) + difY * 1);\n\t      i += j;\n\n\t      if (beziers) {\n\t        for (j = 0; j < beziers.length; j++) {\n\t          segment.push(beziers[j]);\n\t        }\n\t      }\n\n\t      relativeX = segment[segment.length - 2];\n\t      relativeY = segment[segment.length - 1];\n\t    } else {\n\t      console.log(errorMessage);\n\t    }\n\t  }\n\n\t  i = segment.length;\n\n\t  if (i < 6) {\n\t    path.pop();\n\t    i = 0;\n\t  } else if (segment[0] === segment[i - 2] && segment[1] === segment[i - 1]) {\n\t    segment.closed = true;\n\t  }\n\n\t  path.totalPoints = points + i;\n\t  return path;\n\t}\n\tfunction flatPointsToSegment(points, curviness) {\n\t  if (curviness === void 0) {\n\t    curviness = 1;\n\t  }\n\n\t  var x = points[0],\n\t      y = 0,\n\t      segment = [x, y],\n\t      i = 2;\n\n\t  for (; i < points.length; i += 2) {\n\t    segment.push(x, y, points[i], y = (points[i] - x) * curviness / 2, x = points[i], -y);\n\t  }\n\n\t  return segment;\n\t}\n\tfunction pointsToSegment(points, curviness) {\n\t  _abs(points[0] - points[2]) < 1e-4 && _abs(points[1] - points[3]) < 1e-4 && (points = points.slice(2));\n\t  var l = points.length - 2,\n\t      x = +points[0],\n\t      y = +points[1],\n\t      nextX = +points[2],\n\t      nextY = +points[3],\n\t      segment = [x, y, x, y],\n\t      dx2 = nextX - x,\n\t      dy2 = nextY - y,\n\t      closed = Math.abs(points[l] - x) < 0.001 && Math.abs(points[l + 1] - y) < 0.001,\n\t      prevX,\n\t      prevY,\n\t      i,\n\t      dx1,\n\t      dy1,\n\t      r1,\n\t      r2,\n\t      r3,\n\t      tl,\n\t      mx1,\n\t      mx2,\n\t      mxm,\n\t      my1,\n\t      my2,\n\t      mym;\n\n\t  if (closed) {\n\t    points.push(nextX, nextY);\n\t    nextX = x;\n\t    nextY = y;\n\t    x = points[l - 2];\n\t    y = points[l - 1];\n\t    points.unshift(x, y);\n\t    l += 4;\n\t  }\n\n\t  curviness = curviness || curviness === 0 ? +curviness : 1;\n\n\t  for (i = 2; i < l; i += 2) {\n\t    prevX = x;\n\t    prevY = y;\n\t    x = nextX;\n\t    y = nextY;\n\t    nextX = +points[i + 2];\n\t    nextY = +points[i + 3];\n\n\t    if (x === nextX && y === nextY) {\n\t      continue;\n\t    }\n\n\t    dx1 = dx2;\n\t    dy1 = dy2;\n\t    dx2 = nextX - x;\n\t    dy2 = nextY - y;\n\t    r1 = _sqrt(dx1 * dx1 + dy1 * dy1);\n\t    r2 = _sqrt(dx2 * dx2 + dy2 * dy2);\n\t    r3 = _sqrt(Math.pow(dx2 / r2 + dx1 / r1, 2) + Math.pow(dy2 / r2 + dy1 / r1, 2));\n\t    tl = (r1 + r2) * curviness * 0.25 / r3;\n\t    mx1 = x - (x - prevX) * (r1 ? tl / r1 : 0);\n\t    mx2 = x + (nextX - x) * (r2 ? tl / r2 : 0);\n\t    mxm = x - (mx1 + ((mx2 - mx1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));\n\t    my1 = y - (y - prevY) * (r1 ? tl / r1 : 0);\n\t    my2 = y + (nextY - y) * (r2 ? tl / r2 : 0);\n\t    mym = y - (my1 + ((my2 - my1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));\n\n\t    if (x !== prevX || y !== prevY) {\n\t      segment.push(_round(mx1 + mxm), _round(my1 + mym), _round(x), _round(y), _round(mx2 + mxm), _round(my2 + mym));\n\t    }\n\t  }\n\n\t  x !== nextX || y !== nextY || segment.length < 4 ? segment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY)) : segment.length -= 2;\n\n\t  if (segment.length === 2) {\n\t    segment.push(x, y, x, y, x, y);\n\t  } else if (closed) {\n\t    segment.splice(0, 6);\n\t    segment.length = segment.length - 6;\n\t  }\n\n\t  return segment;\n\t}\n\tfunction rawPathToString(rawPath) {\n\t  if (_isNumber(rawPath[0])) {\n\t    rawPath = [rawPath];\n\t  }\n\n\t  var result = \"\",\n\t      l = rawPath.length,\n\t      sl,\n\t      s,\n\t      i,\n\t      segment;\n\n\t  for (s = 0; s < l; s++) {\n\t    segment = rawPath[s];\n\t    result += \"M\" + _round(segment[0]) + \",\" + _round(segment[1]) + \" C\";\n\t    sl = segment.length;\n\n\t    for (i = 2; i < sl; i++) {\n\t      result += _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i]) + \" \";\n\t    }\n\n\t    if (segment.closed) {\n\t      result += \"z\";\n\t    }\n\t  }\n\n\t  return result;\n\t}\n\n\tvar _doc,\n\t    _win,\n\t    _docElement,\n\t    _body,\n\t    _divContainer,\n\t    _svgContainer,\n\t    _identityMatrix,\n\t    _gEl,\n\t    _transformProp = \"transform\",\n\t    _transformOriginProp = _transformProp + \"Origin\",\n\t    _hasOffsetBug,\n\t    _setDoc = function _setDoc(element) {\n\t  var doc = element.ownerDocument || element;\n\n\t  if (!(_transformProp in element.style) && \"msTransform\" in element.style) {\n\t    _transformProp = \"msTransform\";\n\t    _transformOriginProp = _transformProp + \"Origin\";\n\t  }\n\n\t  while (doc.parentNode && (doc = doc.parentNode)) {}\n\n\t  _win = window;\n\t  _identityMatrix = new Matrix2D();\n\n\t  if (doc) {\n\t    _doc = doc;\n\t    _docElement = doc.documentElement;\n\t    _body = doc.body;\n\t    _gEl = _doc.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t    _gEl.style.transform = \"none\";\n\t    var d1 = doc.createElement(\"div\"),\n\t        d2 = doc.createElement(\"div\"),\n\t        root = doc && (doc.body || doc.firstElementChild);\n\n\t    if (root && root.appendChild) {\n\t      root.appendChild(d1);\n\t      d1.appendChild(d2);\n\t      d1.setAttribute(\"style\", \"position:static;transform:translate3d(0,0,1px)\");\n\t      _hasOffsetBug = d2.offsetParent !== d1;\n\t      root.removeChild(d1);\n\t    }\n\t  }\n\n\t  return doc;\n\t},\n\t    _forceNonZeroScale = function _forceNonZeroScale(e) {\n\t  var a, cache;\n\n\t  while (e && e !== _body) {\n\t    cache = e._gsap;\n\t    cache && cache.uncache && cache.get(e, \"x\");\n\n\t    if (cache && !cache.scaleX && !cache.scaleY && cache.renderTransform) {\n\t      cache.scaleX = cache.scaleY = 1e-4;\n\t      cache.renderTransform(1, cache);\n\t      a ? a.push(cache) : a = [cache];\n\t    }\n\n\t    e = e.parentNode;\n\t  }\n\n\t  return a;\n\t},\n\t    _svgTemps = [],\n\t    _divTemps = [],\n\t    _getDocScrollTop = function _getDocScrollTop() {\n\t  return _win.pageYOffset || _doc.scrollTop || _docElement.scrollTop || _body.scrollTop || 0;\n\t},\n\t    _getDocScrollLeft = function _getDocScrollLeft() {\n\t  return _win.pageXOffset || _doc.scrollLeft || _docElement.scrollLeft || _body.scrollLeft || 0;\n\t},\n\t    _svgOwner = function _svgOwner(element) {\n\t  return element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null);\n\t},\n\t    _isFixed = function _isFixed(element) {\n\t  if (_win.getComputedStyle(element).position === \"fixed\") {\n\t    return true;\n\t  }\n\n\t  element = element.parentNode;\n\n\t  if (element && element.nodeType === 1) {\n\t    return _isFixed(element);\n\t  }\n\t},\n\t    _createSibling = function _createSibling(element, i) {\n\t  if (element.parentNode && (_doc || _setDoc(element))) {\n\t    var svg = _svgOwner(element),\n\t        ns = svg ? svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\" : \"http://www.w3.org/1999/xhtml\",\n\t        type = svg ? i ? \"rect\" : \"g\" : \"div\",\n\t        x = i !== 2 ? 0 : 100,\n\t        y = i === 3 ? 100 : 0,\n\t        css = \"position:absolute;display:block;pointer-events:none;margin:0;padding:0;\",\n\t        e = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n\n\t    if (i) {\n\t      if (!svg) {\n\t        if (!_divContainer) {\n\t          _divContainer = _createSibling(element);\n\t          _divContainer.style.cssText = css;\n\t        }\n\n\t        e.style.cssText = css + \"width:0.1px;height:0.1px;top:\" + y + \"px;left:\" + x + \"px\";\n\n\t        _divContainer.appendChild(e);\n\t      } else {\n\t        _svgContainer || (_svgContainer = _createSibling(element));\n\t        e.setAttribute(\"width\", 0.01);\n\t        e.setAttribute(\"height\", 0.01);\n\t        e.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\n\t        _svgContainer.appendChild(e);\n\t      }\n\t    }\n\n\t    return e;\n\t  }\n\n\t  throw \"Need document and parent.\";\n\t},\n\t    _consolidate = function _consolidate(m) {\n\t  var c = new Matrix2D(),\n\t      i = 0;\n\n\t  for (; i < m.numberOfItems; i++) {\n\t    c.multiply(m.getItem(i).matrix);\n\t  }\n\n\t  return c;\n\t},\n\t    _getCTM = function _getCTM(svg) {\n\t  var m = svg.getCTM(),\n\t      transform;\n\n\t  if (!m) {\n\t    transform = svg.style[_transformProp];\n\t    svg.style[_transformProp] = \"none\";\n\t    svg.appendChild(_gEl);\n\t    m = _gEl.getCTM();\n\t    svg.removeChild(_gEl);\n\t    transform ? svg.style[_transformProp] = transform : svg.style.removeProperty(_transformProp.replace(/([A-Z])/g, \"-$1\").toLowerCase());\n\t  }\n\n\t  return m || _identityMatrix.clone();\n\t},\n\t    _placeSiblings = function _placeSiblings(element, adjustGOffset) {\n\t  var svg = _svgOwner(element),\n\t      isRootSVG = element === svg,\n\t      siblings = svg ? _svgTemps : _divTemps,\n\t      parent = element.parentNode,\n\t      container,\n\t      m,\n\t      b,\n\t      x,\n\t      y,\n\t      cs;\n\n\t  if (element === _win) {\n\t    return element;\n\t  }\n\n\t  siblings.length || siblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n\t  container = svg ? _svgContainer : _divContainer;\n\n\t  if (svg) {\n\t    if (isRootSVG) {\n\t      b = _getCTM(element);\n\t      x = -b.e / b.a;\n\t      y = -b.f / b.d;\n\t      m = _identityMatrix;\n\t    } else if (element.getBBox) {\n\t      b = element.getBBox();\n\t      m = element.transform ? element.transform.baseVal : {};\n\t      m = !m.numberOfItems ? _identityMatrix : m.numberOfItems > 1 ? _consolidate(m) : m.getItem(0).matrix;\n\t      x = m.a * b.x + m.c * b.y;\n\t      y = m.b * b.x + m.d * b.y;\n\t    } else {\n\t      m = new Matrix2D();\n\t      x = y = 0;\n\t    }\n\n\t    if (adjustGOffset && element.tagName.toLowerCase() === \"g\") {\n\t      x = y = 0;\n\t    }\n\n\t    (isRootSVG ? svg : parent).appendChild(container);\n\t    container.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n\t  } else {\n\t    x = y = 0;\n\n\t    if (_hasOffsetBug) {\n\t      m = element.offsetParent;\n\t      b = element;\n\n\t      while (b && (b = b.parentNode) && b !== m && b.parentNode) {\n\t        if ((_win.getComputedStyle(b)[_transformProp] + \"\").length > 4) {\n\t          x = b.offsetLeft;\n\t          y = b.offsetTop;\n\t          b = 0;\n\t        }\n\t      }\n\t    }\n\n\t    cs = _win.getComputedStyle(element);\n\n\t    if (cs.position !== \"absolute\" && cs.position !== \"fixed\") {\n\t      m = element.offsetParent;\n\n\t      while (parent && parent !== m) {\n\t        x += parent.scrollLeft || 0;\n\t        y += parent.scrollTop || 0;\n\t        parent = parent.parentNode;\n\t      }\n\t    }\n\n\t    b = container.style;\n\t    b.top = element.offsetTop - y + \"px\";\n\t    b.left = element.offsetLeft - x + \"px\";\n\t    b[_transformProp] = cs[_transformProp];\n\t    b[_transformOriginProp] = cs[_transformOriginProp];\n\t    b.position = cs.position === \"fixed\" ? \"fixed\" : \"absolute\";\n\t    element.parentNode.appendChild(container);\n\t  }\n\n\t  return container;\n\t},\n\t    _setMatrix = function _setMatrix(m, a, b, c, d, e, f) {\n\t  m.a = a;\n\t  m.b = b;\n\t  m.c = c;\n\t  m.d = d;\n\t  m.e = e;\n\t  m.f = f;\n\t  return m;\n\t};\n\n\tvar Matrix2D = function () {\n\t  function Matrix2D(a, b, c, d, e, f) {\n\t    if (a === void 0) {\n\t      a = 1;\n\t    }\n\n\t    if (b === void 0) {\n\t      b = 0;\n\t    }\n\n\t    if (c === void 0) {\n\t      c = 0;\n\t    }\n\n\t    if (d === void 0) {\n\t      d = 1;\n\t    }\n\n\t    if (e === void 0) {\n\t      e = 0;\n\t    }\n\n\t    if (f === void 0) {\n\t      f = 0;\n\t    }\n\n\t    _setMatrix(this, a, b, c, d, e, f);\n\t  }\n\n\t  var _proto = Matrix2D.prototype;\n\n\t  _proto.inverse = function inverse() {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f,\n\t        determinant = a * d - b * c || 1e-10;\n\t    return _setMatrix(this, d / determinant, -b / determinant, -c / determinant, a / determinant, (c * f - d * e) / determinant, -(a * f - b * e) / determinant);\n\t  };\n\n\t  _proto.multiply = function multiply(matrix) {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f,\n\t        a2 = matrix.a,\n\t        b2 = matrix.c,\n\t        c2 = matrix.b,\n\t        d2 = matrix.d,\n\t        e2 = matrix.e,\n\t        f2 = matrix.f;\n\t    return _setMatrix(this, a2 * a + c2 * c, a2 * b + c2 * d, b2 * a + d2 * c, b2 * b + d2 * d, e + e2 * a + f2 * c, f + e2 * b + f2 * d);\n\t  };\n\n\t  _proto.clone = function clone() {\n\t    return new Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);\n\t  };\n\n\t  _proto.equals = function equals(matrix) {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f;\n\t    return a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f;\n\t  };\n\n\t  _proto.apply = function apply(point, decoratee) {\n\t    if (decoratee === void 0) {\n\t      decoratee = {};\n\t    }\n\n\t    var x = point.x,\n\t        y = point.y,\n\t        a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f;\n\t    decoratee.x = x * a + y * c + e || 0;\n\t    decoratee.y = x * b + y * d + f || 0;\n\t    return decoratee;\n\t  };\n\n\t  return Matrix2D;\n\t}();\n\tfunction getGlobalMatrix(element, inverse, adjustGOffset, includeScrollInFixed) {\n\t  if (!element || !element.parentNode || (_doc || _setDoc(element)).documentElement === element) {\n\t    return new Matrix2D();\n\t  }\n\n\t  var zeroScales = _forceNonZeroScale(element),\n\t      svg = _svgOwner(element),\n\t      temps = svg ? _svgTemps : _divTemps,\n\t      container = _placeSiblings(element, adjustGOffset),\n\t      b1 = temps[0].getBoundingClientRect(),\n\t      b2 = temps[1].getBoundingClientRect(),\n\t      b3 = temps[2].getBoundingClientRect(),\n\t      parent = container.parentNode,\n\t      isFixed = !includeScrollInFixed && _isFixed(element),\n\t      m = new Matrix2D((b2.left - b1.left) / 100, (b2.top - b1.top) / 100, (b3.left - b1.left) / 100, (b3.top - b1.top) / 100, b1.left + (isFixed ? 0 : _getDocScrollLeft()), b1.top + (isFixed ? 0 : _getDocScrollTop()));\n\n\t  parent.removeChild(container);\n\n\t  if (zeroScales) {\n\t    b1 = zeroScales.length;\n\n\t    while (b1--) {\n\t      b2 = zeroScales[b1];\n\t      b2.scaleX = b2.scaleY = 0;\n\t      b2.renderTransform(1, b2);\n\t    }\n\t  }\n\n\t  return inverse ? m.inverse() : m;\n\t}\n\n\t/*!\n\t * MotionPathPlugin 3.12.5\n\t * https://gsap.com\n\t *\n\t * @license Copyright 2008-2024, GreenSock. All rights reserved.\n\t * Subject to the terms at https://gsap.com/standard-license or for\n\t * Club GSAP members, the agreement issued with that membership.\n\t * @author: Jack Doyle, jack@greensock.com\n\t*/\n\n\tvar _xProps = \"x,translateX,left,marginLeft,xPercent\".split(\",\"),\n\t    _yProps = \"y,translateY,top,marginTop,yPercent\".split(\",\"),\n\t    _DEG2RAD$1 = Math.PI / 180,\n\t    gsap,\n\t    PropTween,\n\t    _getUnit,\n\t    _toArray,\n\t    _getStyleSaver,\n\t    _reverting,\n\t    _getGSAP = function _getGSAP() {\n\t  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n\t},\n\t    _populateSegmentFromArray = function _populateSegmentFromArray(segment, values, property, mode) {\n\t  var l = values.length,\n\t      si = mode === 2 ? 0 : mode,\n\t      i = 0,\n\t      v;\n\n\t  for (; i < l; i++) {\n\t    segment[si] = v = parseFloat(values[i][property]);\n\t    mode === 2 && (segment[si + 1] = 0);\n\t    si += 2;\n\t  }\n\n\t  return segment;\n\t},\n\t    _getPropNum = function _getPropNum(target, prop, unit) {\n\t  return parseFloat(target._gsap.get(target, prop, unit || \"px\")) || 0;\n\t},\n\t    _relativize = function _relativize(segment) {\n\t  var x = segment[0],\n\t      y = segment[1],\n\t      i;\n\n\t  for (i = 2; i < segment.length; i += 2) {\n\t    x = segment[i] += x;\n\t    y = segment[i + 1] += y;\n\t  }\n\t},\n\t    _segmentToRawPath = function _segmentToRawPath(plugin, segment, target, x, y, slicer, vars, unitX, unitY) {\n\t  if (vars.type === \"cubic\") {\n\t    segment = [segment];\n\t  } else {\n\t    vars.fromCurrent !== false && segment.unshift(_getPropNum(target, x, unitX), y ? _getPropNum(target, y, unitY) : 0);\n\t    vars.relative && _relativize(segment);\n\t    var pointFunc = y ? pointsToSegment : flatPointsToSegment;\n\t    segment = [pointFunc(segment, vars.curviness)];\n\t  }\n\n\t  segment = slicer(_align(segment, target, vars));\n\n\t  _addDimensionalPropTween(plugin, target, x, segment, \"x\", unitX);\n\n\t  y && _addDimensionalPropTween(plugin, target, y, segment, \"y\", unitY);\n\t  return cacheRawPathMeasurements(segment, vars.resolution || (vars.curviness === 0 ? 20 : 12));\n\t},\n\t    _emptyFunc = function _emptyFunc(v) {\n\t  return v;\n\t},\n\t    _numExp = /[-+\\.]*\\d+\\.?(?:e-|e\\+)?\\d*/g,\n\t    _originToPoint = function _originToPoint(element, origin, parentMatrix) {\n\t  var m = getGlobalMatrix(element),\n\t      x = 0,\n\t      y = 0,\n\t      svg;\n\n\t  if ((element.tagName + \"\").toLowerCase() === \"svg\") {\n\t    svg = element.viewBox.baseVal;\n\t    svg.width || (svg = {\n\t      width: +element.getAttribute(\"width\"),\n\t      height: +element.getAttribute(\"height\")\n\t    });\n\t  } else {\n\t    svg = origin && element.getBBox && element.getBBox();\n\t  }\n\n\t  if (origin && origin !== \"auto\") {\n\t    x = origin.push ? origin[0] * (svg ? svg.width : element.offsetWidth || 0) : origin.x;\n\t    y = origin.push ? origin[1] * (svg ? svg.height : element.offsetHeight || 0) : origin.y;\n\t  }\n\n\t  return parentMatrix.apply(x || y ? m.apply({\n\t    x: x,\n\t    y: y\n\t  }) : {\n\t    x: m.e,\n\t    y: m.f\n\t  });\n\t},\n\t    _getAlignMatrix = function _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin) {\n\t  var parentMatrix = getGlobalMatrix(fromElement.parentNode, true, true),\n\t      m = parentMatrix.clone().multiply(getGlobalMatrix(toElement)),\n\t      fromPoint = _originToPoint(fromElement, fromOrigin, parentMatrix),\n\t      _originToPoint2 = _originToPoint(toElement, toOrigin, parentMatrix),\n\t      x = _originToPoint2.x,\n\t      y = _originToPoint2.y,\n\t      p;\n\n\t  m.e = m.f = 0;\n\n\t  if (toOrigin === \"auto\" && toElement.getTotalLength && toElement.tagName.toLowerCase() === \"path\") {\n\t    p = toElement.getAttribute(\"d\").match(_numExp) || [];\n\t    p = m.apply({\n\t      x: +p[0],\n\t      y: +p[1]\n\t    });\n\t    x += p.x;\n\t    y += p.y;\n\t  }\n\n\t  if (p) {\n\t    p = m.apply(toElement.getBBox());\n\t    x -= p.x;\n\t    y -= p.y;\n\t  }\n\n\t  m.e = x - fromPoint.x;\n\t  m.f = y - fromPoint.y;\n\t  return m;\n\t},\n\t    _align = function _align(rawPath, target, _ref) {\n\t  var align = _ref.align,\n\t      matrix = _ref.matrix,\n\t      offsetX = _ref.offsetX,\n\t      offsetY = _ref.offsetY,\n\t      alignOrigin = _ref.alignOrigin;\n\n\t  var x = rawPath[0][0],\n\t      y = rawPath[0][1],\n\t      curX = _getPropNum(target, \"x\"),\n\t      curY = _getPropNum(target, \"y\"),\n\t      alignTarget,\n\t      m,\n\t      p;\n\n\t  if (!rawPath || !rawPath.length) {\n\t    return getRawPath(\"M0,0L0,0\");\n\t  }\n\n\t  if (align) {\n\t    if (align === \"self\" || (alignTarget = _toArray(align)[0] || target) === target) {\n\t      transformRawPath(rawPath, 1, 0, 0, 1, curX - x, curY - y);\n\t    } else {\n\t      if (alignOrigin && alignOrigin[2] !== false) {\n\t        gsap.set(target, {\n\t          transformOrigin: alignOrigin[0] * 100 + \"% \" + alignOrigin[1] * 100 + \"%\"\n\t        });\n\t      } else {\n\t        alignOrigin = [_getPropNum(target, \"xPercent\") / -100, _getPropNum(target, \"yPercent\") / -100];\n\t      }\n\n\t      m = _getAlignMatrix(target, alignTarget, alignOrigin, \"auto\");\n\t      p = m.apply({\n\t        x: x,\n\t        y: y\n\t      });\n\t      transformRawPath(rawPath, m.a, m.b, m.c, m.d, curX + m.e - (p.x - m.e), curY + m.f - (p.y - m.f));\n\t    }\n\t  }\n\n\t  if (matrix) {\n\t    transformRawPath(rawPath, matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f);\n\t  } else if (offsetX || offsetY) {\n\t    transformRawPath(rawPath, 1, 0, 0, 1, offsetX || 0, offsetY || 0);\n\t  }\n\n\t  return rawPath;\n\t},\n\t    _addDimensionalPropTween = function _addDimensionalPropTween(plugin, target, property, rawPath, pathProperty, forceUnit) {\n\t  var cache = target._gsap,\n\t      harness = cache.harness,\n\t      alias = harness && harness.aliases && harness.aliases[property],\n\t      prop = alias && alias.indexOf(\",\") < 0 ? alias : property,\n\t      pt = plugin._pt = new PropTween(plugin._pt, target, prop, 0, 0, _emptyFunc, 0, cache.set(target, prop, plugin));\n\t  pt.u = _getUnit(cache.get(target, prop, forceUnit)) || 0;\n\t  pt.path = rawPath;\n\t  pt.pp = pathProperty;\n\n\t  plugin._props.push(prop);\n\t},\n\t    _sliceModifier = function _sliceModifier(start, end) {\n\t  return function (rawPath) {\n\t    return start || end !== 1 ? sliceRawPath(rawPath, start, end) : rawPath;\n\t  };\n\t};\n\n\tvar MotionPathPlugin = {\n\t  version: \"3.12.5\",\n\t  name: \"motionPath\",\n\t  register: function register(core, Plugin, propTween) {\n\t    gsap = core;\n\t    _getUnit = gsap.utils.getUnit;\n\t    _toArray = gsap.utils.toArray;\n\t    _getStyleSaver = gsap.core.getStyleSaver;\n\n\t    _reverting = gsap.core.reverting || function () {};\n\n\t    PropTween = propTween;\n\t  },\n\t  init: function init(target, vars, tween) {\n\t    if (!gsap) {\n\t      console.warn(\"Please gsap.registerPlugin(MotionPathPlugin)\");\n\t      return false;\n\t    }\n\n\t    if (!(typeof vars === \"object\" && !vars.style) || !vars.path) {\n\t      vars = {\n\t        path: vars\n\t      };\n\t    }\n\n\t    var rawPaths = [],\n\t        _vars = vars,\n\t        path = _vars.path,\n\t        autoRotate = _vars.autoRotate,\n\t        unitX = _vars.unitX,\n\t        unitY = _vars.unitY,\n\t        x = _vars.x,\n\t        y = _vars.y,\n\t        firstObj = path[0],\n\t        slicer = _sliceModifier(vars.start, \"end\" in vars ? vars.end : 1),\n\t        rawPath,\n\t        p;\n\n\t    this.rawPaths = rawPaths;\n\t    this.target = target;\n\t    this.tween = tween;\n\t    this.styles = _getStyleSaver && _getStyleSaver(target, \"transform\");\n\n\t    if (this.rotate = autoRotate || autoRotate === 0) {\n\t      this.rOffset = parseFloat(autoRotate) || 0;\n\t      this.radians = !!vars.useRadians;\n\t      this.rProp = vars.rotation || \"rotation\";\n\t      this.rSet = target._gsap.set(target, this.rProp, this);\n\t      this.ru = _getUnit(target._gsap.get(target, this.rProp)) || 0;\n\t    }\n\n\t    if (Array.isArray(path) && !(\"closed\" in path) && typeof firstObj !== \"number\") {\n\t      for (p in firstObj) {\n\t        if (!x && ~_xProps.indexOf(p)) {\n\t          x = p;\n\t        } else if (!y && ~_yProps.indexOf(p)) {\n\t          y = p;\n\t        }\n\t      }\n\n\t      if (x && y) {\n\t        rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray(_populateSegmentFromArray([], path, x, 0), path, y, 1), target, x, y, slicer, vars, unitX || _getUnit(path[0][x]), unitY || _getUnit(path[0][y])));\n\t      } else {\n\t        x = y = 0;\n\t      }\n\n\t      for (p in firstObj) {\n\t        p !== x && p !== y && rawPaths.push(_segmentToRawPath(this, _populateSegmentFromArray([], path, p, 2), target, p, 0, slicer, vars, _getUnit(path[0][p])));\n\t      }\n\t    } else {\n\t      rawPath = slicer(_align(getRawPath(vars.path), target, vars));\n\t      cacheRawPathMeasurements(rawPath, vars.resolution);\n\t      rawPaths.push(rawPath);\n\n\t      _addDimensionalPropTween(this, target, vars.x || \"x\", rawPath, \"x\", vars.unitX || \"px\");\n\n\t      _addDimensionalPropTween(this, target, vars.y || \"y\", rawPath, \"y\", vars.unitY || \"px\");\n\t    }\n\t  },\n\t  render: function render(ratio, data) {\n\t    var rawPaths = data.rawPaths,\n\t        i = rawPaths.length,\n\t        pt = data._pt;\n\n\t    if (data.tween._time || !_reverting()) {\n\t      if (ratio > 1) {\n\t        ratio = 1;\n\t      } else if (ratio < 0) {\n\t        ratio = 0;\n\t      }\n\n\t      while (i--) {\n\t        getPositionOnPath(rawPaths[i], ratio, !i && data.rotate, rawPaths[i]);\n\t      }\n\n\t      while (pt) {\n\t        pt.set(pt.t, pt.p, pt.path[pt.pp] + pt.u, pt.d, ratio);\n\t        pt = pt._next;\n\t      }\n\n\t      data.rotate && data.rSet(data.target, data.rProp, rawPaths[0].angle * (data.radians ? _DEG2RAD$1 : 1) + data.rOffset + data.ru, data, ratio);\n\t    } else {\n\t      data.styles.revert();\n\t    }\n\t  },\n\t  getLength: function getLength(path) {\n\t    return cacheRawPathMeasurements(getRawPath(path)).totalLength;\n\t  },\n\t  sliceRawPath: sliceRawPath,\n\t  getRawPath: getRawPath,\n\t  pointsToSegment: pointsToSegment,\n\t  stringToRawPath: stringToRawPath,\n\t  rawPathToString: rawPathToString,\n\t  transformRawPath: transformRawPath,\n\t  getGlobalMatrix: getGlobalMatrix,\n\t  getPositionOnPath: getPositionOnPath,\n\t  cacheRawPathMeasurements: cacheRawPathMeasurements,\n\t  convertToPath: function convertToPath$1(targets, swap) {\n\t    return _toArray(targets).map(function (target) {\n\t      return convertToPath(target, swap !== false);\n\t    });\n\t  },\n\t  convertCoordinates: function convertCoordinates(fromElement, toElement, point) {\n\t    var m = getGlobalMatrix(toElement, true, true).multiply(getGlobalMatrix(fromElement));\n\t    return point ? m.apply(point) : m;\n\t  },\n\t  getAlignMatrix: _getAlignMatrix,\n\t  getRelativePosition: function getRelativePosition(fromElement, toElement, fromOrigin, toOrigin) {\n\t    var m = _getAlignMatrix(fromElement, toElement, fromOrigin, toOrigin);\n\n\t    return {\n\t      x: m.e,\n\t      y: m.f\n\t    };\n\t  },\n\t  arrayToRawPath: function arrayToRawPath(value, vars) {\n\t    vars = vars || {};\n\n\t    var segment = _populateSegmentFromArray(_populateSegmentFromArray([], value, vars.x || \"x\", 0), value, vars.y || \"y\", 1);\n\n\t    vars.relative && _relativize(segment);\n\t    return [vars.type === \"cubic\" ? segment : pointsToSegment(segment, vars.curviness)];\n\t  }\n\t};\n\t_getGSAP() && gsap.registerPlugin(MotionPathPlugin);\n\n\texports.MotionPathPlugin = MotionPathPlugin;\n\texports.default = MotionPathPlugin;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gsap/dist/MotionPathPlugin.js\n"));

/***/ }),

/***/ "./components/FootstepsAnimation.tsx":
/*!*******************************************!*\
  !*** ./components/FootstepsAnimation.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_dist_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap/dist/MotionPathPlugin */ \"./node_modules/gsap/dist/MotionPathPlugin.js\");\n/* harmony import */ var gsap_dist_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(gsap_dist_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_3__);\n\nvar _s = $RefreshSig$();\n\n\n\ngsap__WEBPACK_IMPORTED_MODULE_2__[\"default\"].registerPlugin(gsap_dist_MotionPathPlugin__WEBPACK_IMPORTED_MODULE_3__.MotionPathPlugin);\nconst FootstepsAnimation = ()=>{\n    _s();\n    const footstepRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const ghostTrailRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!footstepRef.current) return;\n        // Define the curved path\n        const path = {\n            type: \"cubic\",\n            path: [\n                {\n                    x: 0,\n                    y: 0\n                },\n                {\n                    x: 100,\n                    y: -50\n                },\n                {\n                    x: 200,\n                    y: -30\n                },\n                {\n                    x: 300,\n                    y: -60\n                },\n                {\n                    x: 400,\n                    y: -20\n                } // Tech Innovation\n            ],\n            autoRotate: true\n        };\n        // Create footstep animation\n        gsap__WEBPACK_IMPORTED_MODULE_2__[\"default\"].to(footstepRef.current, {\n            duration: 5,\n            repeat: -1,\n            ease: \"none\",\n            motionPath: path,\n            onUpdate: createGhostTrail\n        });\n    }, []);\n    const createGhostTrail = ()=>{\n        if (!footstepRef.current || !ghostTrailRef.current) return;\n        const ghost = footstepRef.current.cloneNode(true);\n        ghost.style.position = \"absolute\";\n        ghost.style.opacity = \"0.6\";\n        ghostTrailRef.current.appendChild(ghost);\n        gsap__WEBPACK_IMPORTED_MODULE_2__[\"default\"].to(ghost, {\n            duration: 1,\n            opacity: 0,\n            onComplete: ()=>ghost.remove()\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 pointer-events-none\",\n        style: {\n            zIndex: 50\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            ref: ghostTrailRef,\n            className: \"ghost-trail-container\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: footstepRef,\n                className: \"footstep\",\n                style: {\n                    width: \"30px\",\n                    height: \"30px\",\n                    position: \"absolute\",\n                    backgroundImage: \"url(/footprint.svg)\",\n                    backgroundSize: \"contain\",\n                    backgroundRepeat: \"no-repeat\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/fausto/coding_2024/dell_presentation/components/FootstepsAnimation.tsx\",\n                lineNumber: 55,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/fausto/coding_2024/dell_presentation/components/FootstepsAnimation.tsx\",\n            lineNumber: 54,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/fausto/coding_2024/dell_presentation/components/FootstepsAnimation.tsx\",\n        lineNumber: 53,\n        columnNumber: 5\n    }, undefined);\n};\n_s(FootstepsAnimation, \"gyLvw1zCpdr2iiT/M2hPv++tAJA=\");\n_c = FootstepsAnimation;\n/* harmony default export */ __webpack_exports__[\"default\"] = (FootstepsAnimation);\nvar _c;\n$RefreshReg$(_c, \"FootstepsAnimation\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Zvb3RzdGVwc0FuaW1hdGlvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpRDtBQUN6QjtBQUNzQztBQUU5REcsMkRBQW1CLENBQUNDLHdFQUFnQkE7QUFFcEMsTUFBTUUscUJBQXFCOztJQUN6QixNQUFNQyxjQUFjTCw2Q0FBTUEsQ0FBaUI7SUFDM0MsTUFBTU0sZ0JBQWdCTiw2Q0FBTUEsQ0FBaUI7SUFFN0NELGdEQUFTQSxDQUFDO1FBQ1IsSUFBSSxDQUFDTSxZQUFZRSxPQUFPLEVBQUU7UUFFMUIseUJBQXlCO1FBQ3pCLE1BQU1DLE9BQU87WUFDWEMsTUFBTTtZQUNORCxNQUFNO2dCQUNKO29CQUFFRSxHQUFHO29CQUFHQyxHQUFHO2dCQUFFO2dCQUNiO29CQUFFRCxHQUFHO29CQUFLQyxHQUFHLENBQUM7Z0JBQUc7Z0JBQ2pCO29CQUFFRCxHQUFHO29CQUFLQyxHQUFHLENBQUM7Z0JBQUc7Z0JBQ2pCO29CQUFFRCxHQUFHO29CQUFLQyxHQUFHLENBQUM7Z0JBQUc7Z0JBQ2pCO29CQUFFRCxHQUFHO29CQUFLQyxHQUFHLENBQUM7Z0JBQUcsRUFBUyxrQkFBa0I7YUFDN0M7WUFDREMsWUFBWTtRQUNkO1FBRUEsNEJBQTRCO1FBQzVCWCwrQ0FBTyxDQUFDSSxZQUFZRSxPQUFPLEVBQUU7WUFDM0JPLFVBQVU7WUFDVkMsUUFBUSxDQUFDO1lBQ1RDLE1BQU07WUFDTkMsWUFBWVQ7WUFDWlUsVUFBVUM7UUFDWjtJQUNGLEdBQUcsRUFBRTtJQUVMLE1BQU1BLG1CQUFtQjtRQUN2QixJQUFJLENBQUNkLFlBQVlFLE9BQU8sSUFBSSxDQUFDRCxjQUFjQyxPQUFPLEVBQUU7UUFFcEQsTUFBTWEsUUFBUWYsWUFBWUUsT0FBTyxDQUFDYyxTQUFTLENBQUM7UUFDNUNELE1BQU1FLEtBQUssQ0FBQ0MsUUFBUSxHQUFHO1FBQ3ZCSCxNQUFNRSxLQUFLLENBQUNFLE9BQU8sR0FBRztRQUN0QmxCLGNBQWNDLE9BQU8sQ0FBQ2tCLFdBQVcsQ0FBQ0w7UUFFbENuQiwrQ0FBTyxDQUFDbUIsT0FBTztZQUNiTixVQUFVO1lBQ1ZVLFNBQVM7WUFDVEUsWUFBWSxJQUFNTixNQUFNTyxNQUFNO1FBQ2hDO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ0M7UUFBSUMsV0FBVTtRQUFvQ1AsT0FBTztZQUFFUSxRQUFRO1FBQUc7a0JBQ3JFLDRFQUFDRjtZQUFJRyxLQUFLekI7WUFBZXVCLFdBQVU7c0JBQ2pDLDRFQUFDRDtnQkFDQ0csS0FBSzFCO2dCQUNMd0IsV0FBVTtnQkFDVlAsT0FBTztvQkFDTFUsT0FBTztvQkFDUEMsUUFBUTtvQkFDUlYsVUFBVTtvQkFDVlcsaUJBQWlCO29CQUNqQkMsZ0JBQWdCO29CQUNoQkMsa0JBQWtCO2dCQUNwQjs7Ozs7Ozs7Ozs7Ozs7OztBQUtWO0dBL0RNaEM7S0FBQUE7QUFpRU4sK0RBQWVBLGtCQUFrQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0Zvb3RzdGVwc0FuaW1hdGlvbi50c3g/ZDg0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgZ3NhcCBmcm9tICdnc2FwJztcbmltcG9ydCB7IE1vdGlvblBhdGhQbHVnaW4gfSBmcm9tICdnc2FwL2Rpc3QvTW90aW9uUGF0aFBsdWdpbic7XG5cbmdzYXAucmVnaXN0ZXJQbHVnaW4oTW90aW9uUGF0aFBsdWdpbik7XG5cbmNvbnN0IEZvb3RzdGVwc0FuaW1hdGlvbiA9ICgpID0+IHtcbiAgY29uc3QgZm9vdHN0ZXBSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBnaG9zdFRyYWlsUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghZm9vdHN0ZXBSZWYuY3VycmVudCkgcmV0dXJuO1xuXG4gICAgLy8gRGVmaW5lIHRoZSBjdXJ2ZWQgcGF0aFxuICAgIGNvbnN0IHBhdGggPSB7XG4gICAgICB0eXBlOiBcImN1YmljXCIsXG4gICAgICBwYXRoOiBbXG4gICAgICAgIHsgeDogMCwgeTogMCB9LCAgICAgICAgICAgLy8gU3RhcnQgYXQgQWNhZGVtaWMgRm91bmRhdGlvblxuICAgICAgICB7IHg6IDEwMCwgeTogLTUwIH0sICAgICAgIC8vIENvbnRyb2wgcG9pbnQgMVxuICAgICAgICB7IHg6IDIwMCwgeTogLTMwIH0sICAgICAgIC8vIEJ1c2luZXNzIExlYWRlcnNoaXBcbiAgICAgICAgeyB4OiAzMDAsIHk6IC02MCB9LCAgICAgICAvLyBDb250cm9sIHBvaW50IDJcbiAgICAgICAgeyB4OiA0MDAsIHk6IC0yMCB9ICAgICAgICAvLyBUZWNoIElubm92YXRpb25cbiAgICAgIF0sXG4gICAgICBhdXRvUm90YXRlOiB0cnVlXG4gICAgfTtcblxuICAgIC8vIENyZWF0ZSBmb290c3RlcCBhbmltYXRpb25cbiAgICBnc2FwLnRvKGZvb3RzdGVwUmVmLmN1cnJlbnQsIHtcbiAgICAgIGR1cmF0aW9uOiA1LFxuICAgICAgcmVwZWF0OiAtMSxcbiAgICAgIGVhc2U6IFwibm9uZVwiLFxuICAgICAgbW90aW9uUGF0aDogcGF0aCxcbiAgICAgIG9uVXBkYXRlOiBjcmVhdGVHaG9zdFRyYWlsXG4gICAgfSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBjcmVhdGVHaG9zdFRyYWlsID0gKCkgPT4ge1xuICAgIGlmICghZm9vdHN0ZXBSZWYuY3VycmVudCB8fCAhZ2hvc3RUcmFpbFJlZi5jdXJyZW50KSByZXR1cm47XG5cbiAgICBjb25zdCBnaG9zdCA9IGZvb3RzdGVwUmVmLmN1cnJlbnQuY2xvbmVOb2RlKHRydWUpIGFzIEhUTUxEaXZFbGVtZW50O1xuICAgIGdob3N0LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICBnaG9zdC5zdHlsZS5vcGFjaXR5ID0gJzAuNic7XG4gICAgZ2hvc3RUcmFpbFJlZi5jdXJyZW50LmFwcGVuZENoaWxkKGdob3N0KTtcblxuICAgIGdzYXAudG8oZ2hvc3QsIHtcbiAgICAgIGR1cmF0aW9uOiAxLFxuICAgICAgb3BhY2l0eTogMCxcbiAgICAgIG9uQ29tcGxldGU6ICgpID0+IGdob3N0LnJlbW92ZSgpXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZpeGVkIGluc2V0LTAgcG9pbnRlci1ldmVudHMtbm9uZVwiIHN0eWxlPXt7IHpJbmRleDogNTAgfX0+XG4gICAgICA8ZGl2IHJlZj17Z2hvc3RUcmFpbFJlZn0gY2xhc3NOYW1lPVwiZ2hvc3QtdHJhaWwtY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgXG4gICAgICAgICAgcmVmPXtmb290c3RlcFJlZn1cbiAgICAgICAgICBjbGFzc05hbWU9XCJmb290c3RlcFwiXG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIHdpZHRoOiAnMzBweCcsXG4gICAgICAgICAgICBoZWlnaHQ6ICczMHB4JyxcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgYmFja2dyb3VuZEltYWdlOiAndXJsKC9mb290cHJpbnQuc3ZnKScsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kU2l6ZTogJ2NvbnRhaW4nLFxuICAgICAgICAgICAgYmFja2dyb3VuZFJlcGVhdDogJ25vLXJlcGVhdCdcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGb290c3RlcHNBbmltYXRpb247ICJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVJlZiIsImdzYXAiLCJNb3Rpb25QYXRoUGx1Z2luIiwicmVnaXN0ZXJQbHVnaW4iLCJGb290c3RlcHNBbmltYXRpb24iLCJmb290c3RlcFJlZiIsImdob3N0VHJhaWxSZWYiLCJjdXJyZW50IiwicGF0aCIsInR5cGUiLCJ4IiwieSIsImF1dG9Sb3RhdGUiLCJ0byIsImR1cmF0aW9uIiwicmVwZWF0IiwiZWFzZSIsIm1vdGlvblBhdGgiLCJvblVwZGF0ZSIsImNyZWF0ZUdob3N0VHJhaWwiLCJnaG9zdCIsImNsb25lTm9kZSIsInN0eWxlIiwicG9zaXRpb24iLCJvcGFjaXR5IiwiYXBwZW5kQ2hpbGQiLCJvbkNvbXBsZXRlIiwicmVtb3ZlIiwiZGl2IiwiY2xhc3NOYW1lIiwiekluZGV4IiwicmVmIiwid2lkdGgiLCJoZWlnaHQiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJiYWNrZ3JvdW5kU2l6ZSIsImJhY2tncm91bmRSZXBlYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/FootstepsAnimation.tsx\n"));

/***/ })

});